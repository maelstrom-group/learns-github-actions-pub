# This is a basic workflow to help you get started with Actions

name: Env Variables Workflow

# on keyword -> defines events that will trigger the workflow
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - develop
  # env keyword -> defines env variables that available in all jobs in the workflow
env:
  # secret object -> contains all encrypting env variables
  # GITHUB_TOKEN: a secret that is automatically available on GitHub workflows, this token can be used to access GitHub's API that requires authentication
  WF_ENV: ${{ secrets.WF_ENV }}
 
jobs:
  create_issue:
    runs-on: ubuntu-latest 
    permissions:
      issues: write 
    steps:
      - name: Push a random file
        run: |
          pwd 
          ls -a
          git init 
          git remote add origin "https://$GITHUB_ACTOR:${{secrets.GITHUB_TOKEN}}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.mail "my-bot@bot.com"
          git config --global user.name "my-bot"
          git fetch 
          git checkout develop
          git branch --set-upstream-to=origin/develop
          git pull 
          ls -a
          echo $RANDOM >> random.txt
          git add -A
          git commit -m "Random file"
          git push
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
  log-env:
    # Use Linux runner to run this job
    runs-on: ubuntu-latest
    # defines env variables that can only be accessed within a specific job.
    env:
      JOB_ENV: Available to all steps in our log-env job
    # steps keyword -> represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Log ENV Variables
        env:
          STEP_ENV:  Available to only this step
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"
      - name: Log ENV Variables 2
        run: |
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"   
  log-default-env:
    # Use Linux runner to run this job
    runs-on: ubuntu-latest
    steps:
      # GITHUB_ACTION: unique identifier of the running step .
      - name: Default ENV Variables 
        run: |
          echo "HOME: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTION: ${GITHUB_ACTION}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "WF_ENV: ${WF_ENV}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "STEP_ENV: ${STEP_ENV}"          